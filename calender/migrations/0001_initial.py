# Generated by Django 5.2.4 on 2025-07-29 08:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('morning', 'Morning (8:00-12:00)'), ('afternoon', 'Afternoon (12:00-5:00)'), ('evening', 'Evening (5:00-8:00)'), ('night', 'Night (8:00-10:00)')], max_length=20, unique=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AvailabilityStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_status', models.CharField(choices=[('available', 'Available for playdates'), ('busy', 'Busy - not available'), ('maybe', 'Maybe available')], default='available', max_length=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_availability_status', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField()),
                ('available_days', models.JSONField(default=list, help_text='List of weekday numbers (0=Monday, 6=Sunday)')),
                ('repeat_schedule', models.CharField(choices=[('once', 'Just this once'), ('weekly', 'Repeat weekly'), ('monthly', 'Repeat monthly')], default='monthly', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_calendar_availabilities', to=settings.AUTH_USER_MODEL)),
                ('time_slots', models.ManyToManyField(blank=True, to='calender.timeslot')),
            ],
            options={
                'ordering': ['year', 'month'],
                'unique_together': {('user', 'year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='UserAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('available_days', models.JSONField(default=list, help_text='List of weekday numbers (0=Monday, 6=Sunday)')),
                ('repeat_schedule', models.CharField(choices=[('once', 'Just this once'), ('weekly', 'Repeat weekly'), ('monthly', 'Repeat monthly')], default='once', max_length=20)),
                ('is_available', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('time_slots', models.ManyToManyField(blank=True, to='calender.timeslot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_availabilities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
